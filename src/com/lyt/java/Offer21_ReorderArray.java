package com.lyt.java;

import java.util.Arrays;
//题目
//	输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有奇数位于数组的
//前半部分，所有偶数位于数组的后半部分。
//思路
//	对于任意一个整数数组，设置一个指针，从前往后走，如果遇到奇数则指针后移，遇到偶数时，
//希望把该偶数放在数组后面；因此，再设置一个指针，从后往前走，遇到偶数时指针前移，遇到
//奇数时，则恰好可以与前面的指针所指的偶数进行调换。
public class Offer21_ReorderArray {
	/**
	 * 1.向后移动low指针，直到它指向偶数
	 * 2.向前移动high指针，直到它指向奇数
	 * 3.当low < high交换值
	 */
	public void reOrderArray(int[] arr) {
		if (arr == null || arr.length == 0)
			return;
		
		int low = 0;
		int high = arr.length - 1;
		while (low < high) {
			while (low < arr.length && isOdd(arr[low]))
				low++;
			while (high >= 0 && !isOdd(arr[high]))
				high--;
			if (low < high) {
				int temp = arr[low];
				arr[low] = arr[high];
				arr[high] = temp;
			}
		}
	}
	
	/**
	 * 把逻辑框架抽象出来
	 */
	private boolean isOdd(int n) {
		return (n & 1) == 1;
	}

	// ===============测试代码===================
	void test1() {
		int[] array = null;
		System.out.println("原始数组：" + Arrays.toString(array));
		reOrderArray(array);
		System.out.println("调整结果：" + Arrays.toString(array));
		System.out.println();
	}

	void test2() {
		int[] array = {};
		System.out.println("原始数组：" + Arrays.toString(array));
		reOrderArray(array);
		System.out.println("调整结果：" + Arrays.toString(array));
		System.out.println();
	}

	void test3() {
		int[] array = { -2, 4, -6, 1, -3, 5 };
		System.out.println("原始数组：" + Arrays.toString(array));
		reOrderArray(array);
		System.out.println("调整结果：" + Arrays.toString(array));
		System.out.println();
	}

	void test4() {
		int[] array = { -1, 3, -5, 2, -4, 6 };
		System.out.println("原始数组：" + Arrays.toString(array));
		reOrderArray(array);
		System.out.println("调整结果：" + Arrays.toString(array));
		System.out.println();
	}

	void test5() {
		int[] array = { -1, 2, -3, 4, -5, 6 };
		System.out.println("原始数组：" + Arrays.toString(array));
		reOrderArray(array);
		System.out.println("调整结果：" + Arrays.toString(array));
		System.out.println();
	}

	void test6() {
		int[] array = { 2, 2, 1, 3, 4, 1 };
		System.out.println("原始数组：" + Arrays.toString(array));
		reOrderArray(array);
		System.out.println("调整结果：" + Arrays.toString(array));
		System.out.println();
	}

	void test7() {
		int[] array = { 1 };
		System.out.println("原始数组：" + Arrays.toString(array));
		reOrderArray(array);
		System.out.println("调整结果：" + Arrays.toString(array));
		System.out.println();
	}

	public static void main(String[] args) {
		Offer21_ReorderArray demo = new Offer21_ReorderArray();
		demo.test1();
		demo.test2();
		demo.test3();
		demo.test4();
		demo.test5();
		demo.test6();
		demo.test7();
	}
}
